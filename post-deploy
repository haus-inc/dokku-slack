#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname $0)/functions"

APP="$1"
IMAGE="$2"
HOSTNAME=$(hostname -f)

[[ -f $DOKKU_ROOT/$APP/ENV ]] && source $DOKKU_ROOT/$APP/ENV # allows us to read in SLACK_* if we define it in the app env

if [[ -f "$DOKKU_ROOT/$APP/SLACK_URL" || -f "$DOKKU_ROOT/SLACK_URL" || "$SLACK_NOTIFY" == "1" ]]; then
  echo "-----> Notifying Slack ..."
  URL=$(dokku url $APP)
  SLACK_URL=$(test ! -z "$SLACK_URL" && echo "$SLACK_URL" || cat "$DOKKU_ROOT/$APP/SLACK_URL" 2> /dev/null || cat "$DOKKU_ROOT/SLACK_URL" 2> /dev/null || echo "https://$SLACK_DOMAIN.slack.com/services/hooks/incoming-webhook?token=$SLACK_TOKEN")

  MESSAGE_TEXT="deployed $APP to $HOSTNAME via $URL"
  DEPLOYING_USER="$(cat $DOKKU_ROOT/$APP/.commit_author 2>/dev/null || true)"
  [[ -n "$DEPLOYING_USER" ]] && MESSAGE_TEXT="$DEPLOYING_USER:"$'\n'"$MESSAGE_TEXT"

  SLACK_JSON="{ \
    \"attachments\": [{ \
      \"text\": \"$MESSAGE_TEXT\", \
      \"fallback\": \"$MESSAGE_TEXT\", \
      \"color\": \"good\", \
      \"mrkdwn_in\": [\"text\"] \
    }] \
  }"
  SLACK_RESULT=$(curl -s -d "payload=$SLACK_JSON" "${SLACK_URL}" -w "%{http_code}")
  echo "       ${SLACK_RESULT}"
fi
